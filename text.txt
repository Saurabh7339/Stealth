import { ThemeProvider, createTheme } from "@mui/material/styles";
import { Snackbar, SnackbarOrigin } from "@mui/material";
import EventEmitter from "events";
import React, { useEffect, useState } from "react";
import ReactDOM from "react-dom";

// Define event emitter instance
const eventEmitter = new EventEmitter();

// Define notification types
interface NotificationData {
  message: string;
  severity: "success" | "error" | "warning" | "info";
}

// Function to truncate long messages
const truncateMessage = (msg: string, maxLength: number = 50): string => {
  return msg.length > maxLength ? msg.slice(0, maxLength) + "â€¦" : msg;
};

// Function to show a notification globally
export const showNotification = (message: string, severity: NotificationData["severity"] = "info") => {
  eventEmitter.emit("notify", { message, severity });
};

// Notification component to handle display
const NotificationContainer: React.FC = () => {
  const [open, setOpen] = useState<boolean>(false);
  const [message, setMessage] = useState<string>("");
  const [severity, setSeverity] = useState<NotificationData["severity"]>("info");

  useEffect(() => {
    const handleNotification = (data: NotificationData) => {
      setMessage(truncateMessage(data.message, 50)); // Limit message length
      setSeverity(data.severity);
      setOpen(true);
    };

    eventEmitter.on("notify", handleNotification);
    return () => {
      eventEmitter.off("notify", handleNotification);
    };
  }, []);

  // Define background colors based on severity
  const getBackgroundColor = (type: NotificationData["severity"]) => {
    return type === "success" ? "#1db954" : "#ff4c4c"; // Green for success, red for error/warning
  };

  return (
    <Snackbar
      open={open}
      autoHideDuration={4000}
      onClose={() => setOpen(false)}
      anchorOrigin={{ vertical: "top", horizontal: "center" } as SnackbarOrigin} // Positioned at the top center
      sx={{
        "& .MuiSnackbarContent-root": {
          minWidth: "420px",
          backgroundColor: "black",
          color: "white",
          fontSize: "1.2rem",
          padding: "16px",
          borderRadius: "8px",
          display: "flex",
          alignItems: "center",
          justifyContent: "center",
          borderBottom: `4px solid ${getBackgroundColor(severity)}`, // Colored border
        },
      }}
    >
      <div>{message}</div>
    </Snackbar>
  );
};

// Function to mount NotificationContainer globally
const mountNotification = () => {
  const div = document.createElement("div");
  document.body.appendChild(div);
  ReactDOM.render(
    <ThemeProvider theme={createTheme()}>
      <NotificationContainer />
    </ThemeProvider>,
    div
  );
};

// Mount notification container once when the app starts
mountNotification();
