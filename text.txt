<Popover
  open={Boolean(anchorEl)}
  anchorEl={anchorEl}
  onClose={() => setAnchorEl(null)}
  anchorOrigin={{
    vertical: 'bottom',
    horizontal: 'center',
  }}
  transformOrigin={{
    vertical: 'top',
    horizontal: 'center',
  }}
>
  <Box p={2}>
    <Typography>Are you sure you want to delete this conversation?</Typography>
    <Box display="flex" justifyContent="flex-end" gap={1} mt={2}>
      <Button size="small" onClick={() => setAnchorEl(null)}>Cancel</Button>
      <Button
        size="small"
        color="error"
        onClick={() => {
          if (selectedThreadId) {
            handleDeleteThread(selectedThreadId); // your delete logic
          }
          setAnchorEl(null);
          setSelectedThreadId(null);
        }}
      >
        Delete
      </Button>
    </Box>
  </Box>
</Popover>


<IconButton
  onClick={(e) => {
    setAnchorEl(e.currentTarget);
    setSelectedThreadId(thread.thread_id);
  }}
>
  <DeleteIcon />
</IconButton>


const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);
const [selectedThreadId, setSelectedThreadId] = useState<string | null>(null);
