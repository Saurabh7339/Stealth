import { createTheme, ThemeProvider } from "@mui/material/styles";
import { Snackbar, Alert } from "@mui/material";
import { EventEmitter } from "events";
import React, { useEffect, useState } from "react";
import ReactDOM from "react-dom";

// Create an event emitter
const eventEmitter = new EventEmitter();

// Function to show a notification
export const showNotification = (message, severity = "info") => {
  eventEmitter.emit("notify", { message, severity });
};

// Notification Component
const NotificationContainer = () => {
  const [open, setOpen] = useState(false);
  const [message, setMessage] = useState("");
  const [severity, setSeverity] = useState("info");

  useEffect(() => {
    const handleNotification = ({ message, severity }) => {
      setMessage(message);
      setSeverity(severity);
      setOpen(true);
    };

    eventEmitter.on("notify", handleNotification);

    return () => {
      eventEmitter.off("notify", handleNotification);
    };
  }, []);

  return (
    <Snackbar open={open} autoHideDuration={3000} onClose={() => setOpen(false)}>
      <Alert onClose={() => setOpen(false)} severity={severity} variant="filled">
        {message}
      </Alert>
    </Snackbar>
  );
};

// Function to mount NotificationContainer once globally
const mountNotification = () => {
  const div = document.createElement("div");
  document.body.appendChild(div);
  ReactDOM.render(
    <ThemeProvider theme={createTheme()}>
      <NotificationContainer />
    </ThemeProvider>,
    div
  );
};

// Mount notification container when the app loads
mountNotification();
