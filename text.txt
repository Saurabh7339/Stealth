import { createTheme, ThemeProvider } from "@mui/material/styles";
import { Snackbar, Alert } from "@mui/material";
import EventEmitter from "events";
import React, { useEffect, useState } from "react";
import ReactDOM from "react-dom";

// Define event emitter instance
const eventEmitter = new EventEmitter();

// Define notification types
interface NotificationData {
  message: string;
  severity: "success" | "error" | "warning" | "info";
}

// Function to show a notification globally
export const showNotification = (message: string, severity: NotificationData["severity"] = "info") => {
  eventEmitter.emit("notify", { message, severity });
};

// Notification component to handle display
const NotificationContainer: React.FC = () => {
  const [open, setOpen] = useState<boolean>(false);
  const [message, setMessage] = useState<string>("");
  const [severity, setSeverity] = useState<NotificationData["severity"]>("info");

  useEffect(() => {
    const handleNotification = (data: NotificationData) => {
      setMessage(data.message);
      setSeverity(data.severity);
      setOpen(true);
    };

    eventEmitter.on("notify", handleNotification);

    return () => {
      eventEmitter.off("notify", handleNotification);
    };
  }, []);

  return (
    <Snackbar open={open} autoHideDuration={3000} onClose={() => setOpen(false)}>
      <Alert onClose={() => setOpen(false)} severity={severity} variant="filled">
        {message}
      </Alert>
    </Snackbar>
  );
};

// Function to mount NotificationContainer globally
const mountNotification = () => {
  const div = document.createElement("div");
  document.body.appendChild(div);
  ReactDOM.render(
    <ThemeProvider theme={createTheme()}>
      <NotificationContainer />
    </ThemeProvider>,
    div
  );
};

// Mount notification container once when the app starts
mountNotification();
